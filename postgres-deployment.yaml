apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: postgres
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: postgres
    spec:
      containers:
        - env:
            - name: DATABASE_URL
              valueFrom:
                configMapKeyRef:
                  key: DATABASE_URL
                  name: backend--env
            - name: JWT_SECRET
              valueFrom:
                configMapKeyRef:
                  key: JWT_SECRET
                  name: backend--env
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_DB
                  name: backend--env
            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_PASSWORD
                  name: backend--env
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_USER
                  name: backend--env
            - name: SENDER_EMAIL
              valueFrom:
                configMapKeyRef:
                  key: SENDER_EMAIL
                  name: backend--env
            - name: SENDER_EMAIL_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: SENDER_EMAIL_PASSWORD
                  name: backend--env
          image: postgres:16
          name: postgres
          ports:
            - containerPort: 5432
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres
      restartPolicy: Always
      volumes:
        - name: postgres
          persistentVolumeClaim:
            claimName: postgres
status: {}
